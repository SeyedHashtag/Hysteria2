from telebot import types
import json
import os

# Language emojis
LANGUAGE_EMOJIS = {
    'en': 'ЁЯЗ║ЁЯЗ╕ English',
    'fa': 'ЁЯЗоЁЯЗ╖ ┘Б╪з╪▒╪│█М',
    'tk': 'ЁЯЗ╣ЁЯЗ▓ T├╝rkmen├зe',
    'hi': 'ЁЯЗоЁЯЗ│ рд╣рд┐рдВрджреА',
    'ar': 'ЁЯЗ╕ЁЯЗж ╪з┘Д╪╣╪▒╪и┘К╪й',
    'ru': 'ЁЯЗ╖ЁЯЗ║ ╨а╤Г╤Б╤Б╨║╨╕╨╣'
}

# Translations for all supported languages
TRANSLATIONS = {
    'en': {
        'welcome': "Welcome to our VPN Service! ЁЯМР\n\nHere you can:\nЁЯУ▒ View your configs\nЁЯТ░ Purchase new plans\nтмЗя╕П Download our apps\nЁЯУЮ Get support\n\nPlease use the menu below to get started!",
        'select_language': "Please select your language:",
        'language_selected': "Language set to English!",
        'my_configs': "ЁЯУ▒ My Configs",
        'purchase_plan': "ЁЯТ░ Purchase Plan",
        'downloads': "тмЗя╕П Downloads",
        'support': "ЁЯУЮ Support",
        'no_configs': "You don't have any active configs. Use the Purchase Plan button to buy one!",
        'select_plan': "Please select a plan:",
        'download_apps': "Download our apps for different platforms:",
        'support_message': "If you need help, please describe your issue and we'll respond as soon as possible."
    },
    'fa': {
        'welcome': "╪и┘З ╪│╪▒┘И█М╪│ VPN ┘Е╪з ╪о┘И╪┤ ╪в┘Е╪п█М╪п! ЁЯМР\n\n╪п╪▒ ╪з█М┘Ж╪м╪з ┘Е█МтАМ╪к┘И╪з┘Ж█М╪п:\nЁЯУ▒ ┘Е╪┤╪з┘З╪п┘З ┘╛█М┌й╪▒╪и┘Ж╪п█МтАМ┘З╪з\nЁЯТ░ ╪о╪▒█М╪п ┘╛┘Д┘Ж ╪м╪п█М╪п\nтмЗя╕П ╪п╪з┘Ж┘Д┘И╪п ╪з┘╛┘Д█М┌й█М╪┤┘ЖтАМ┘З╪з\nЁЯУЮ ┘╛╪┤╪к█М╪и╪з┘Ж█М\n\n┘Д╪╖┘Б╪з┘Л ╪з╪▓ ┘Е┘Ж┘И█М ╪▓█М╪▒ ╪┤╪▒┘И╪╣ ┌й┘Ж█М╪п!",
        'select_language': "┘Д╪╖┘Б╪з┘Л ╪▓╪и╪з┘Ж ╪о┘И╪п ╪▒╪з ╪з┘Ж╪к╪о╪з╪и ┌й┘Ж█М╪п:",
        'language_selected': "╪▓╪и╪з┘Ж ╪и┘З ┘Б╪з╪▒╪│█М ╪к╪║█М█М╪▒ ┌й╪▒╪п!",
        'my_configs': "ЁЯУ▒ ┘╛█М┌й╪▒╪и┘Ж╪п█МтАМ┘З╪з█М ┘Е┘Ж",
        'purchase_plan': "ЁЯТ░ ╪о╪▒█М╪п ┘╛┘Д┘Ж",
        'downloads': "тмЗя╕П ╪п╪з┘Ж┘Д┘И╪птАМ┘З╪з",
        'support': "ЁЯУЮ ┘╛╪┤╪к█М╪и╪з┘Ж█М",
        'no_configs': "╪┤┘Е╪з ┘З█М┌Ж ┘╛█М┌й╪▒╪и┘Ж╪п█М ┘Б╪╣╪з┘Д█М ┘Ж╪п╪з╪▒█М╪п. ╪з╪▓ ╪п┌й┘Е┘З ╪о╪▒█М╪п ┘╛┘Д┘Ж ╪и╪▒╪з█М ╪о╪▒█М╪п ╪з╪│╪к┘Б╪з╪п┘З ┌й┘Ж█М╪п!",
        'select_plan': "┘Д╪╖┘Б╪з┘Л █М┌й ┘╛┘Д┘Ж ╪з┘Ж╪к╪о╪з╪и ┌й┘Ж█М╪п:",
        'download_apps': "╪п╪з┘Ж┘Д┘И╪п ╪з┘╛┘Д█М┌й█М╪┤┘ЖтАМ┘З╪з█М ┘Е╪з ╪и╪▒╪з█М ┘╛┘Д╪к┘Б╪▒┘ЕтАМ┘З╪з█М ┘Е╪о╪к┘Д┘Б:",
        'support_message': "╪з┌п╪▒ ╪и┘З ┌й┘Е┌й ┘Ж█М╪з╪▓ ╪п╪з╪▒█М╪п╪М ┘Д╪╖┘Б╪з┘Л ┘Е╪┤┌й┘Д ╪о┘И╪п ╪▒╪з ╪к┘И╪╢█М╪н ╪п┘З█М╪п ┘И ┘Е╪з ╪п╪▒ ╪з╪│╪▒╪╣ ┘И┘В╪к ┘╛╪з╪│╪о ╪о┘И╪з┘З█М┘Е ╪п╪з╪п."
    },
    'tk': {
        'welcome': "VPN Hyzmatymyza ho┼Я geldi┼Иiz! ЁЯМР\n\nBu ├╜erde siz:\nЁЯУ▒ Konfigurasi├╜alary┼Иyzy g├╢r├╝p bilersi┼Иiz\nЁЯТ░ T├дze me├╜ilnama satyn alyp bilersi┼Иiz\nтмЗя╕П Programmalarymyzy ├╜├╝kl├дp bilersi┼Иiz\nЁЯУЮ Goldaw alyp bilersi┼Иiz\n\nBa┼Яlamak ├╝├зin a┼Яakdaky men├╜uny ulany┼И!",
        'select_language': "Dili┼Иizi sa├╜la┼И:",
        'language_selected': "Dil t├╝rkmen├з├д ├╝├╜tgedildi!",
        'my_configs': "ЁЯУ▒ Meni┼И konfigurasi├╜alarym",
        'purchase_plan': "ЁЯТ░ Me├╜ilnama satyn al",
        'downloads': "тмЗя╕П ├Э├╝klemeler",
        'support': "ЁЯУЮ Goldaw",
        'no_configs': "Sizi┼И i┼Яje┼И konfigurasi├╜a┼Иyz ├╜ok. Satyn almak ├╝├зin Me├╜ilnama satyn al d├╝wmesini ulany┼И!",
        'select_plan': "Me├╜ilnama sa├╜la┼И:",
        'download_apps': "D├╝rli platformalar ├╝├зin programmalarymyzy ├╜├╝kl├д┼И:",
        'support_message': "K├╢mek gerek bolsa, mesel├д┼Иizi d├╝┼Я├╝ndiri┼И we biz m├╝mkin bolan tiz wagtda jogap bereris."
    },
    'hi': {
        'welcome': "рд╣рдорд╛рд░реА VPN рд╕реЗрд╡рд╛ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯМР\n\nрдпрд╣рд╛рдБ рдЖрдк:\nЁЯУ▒ рдЕрдкрдиреЗ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░ рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВ\nЁЯТ░ рдирдИ рдпреЛрдЬрдирд╛рдПрдБ рдЦрд░реАрдж рд╕рдХрддреЗ рд╣реИрдВ\nтмЗя╕П рд╣рдорд╛рд░реА рдРрдкреНрд╕ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ\nЁЯУЮ рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ\n\nрд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдиреАрдЪреЗ рджрд┐рдП рдореЗрдиреВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ!",
        'select_language': "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:",
        'language_selected': "рднрд╛рд╖рд╛ рд╣рд┐рдВрджреА рдореЗрдВ рд╕реЗрдЯ рдХреА рдЧрдИ!",
        'my_configs': "ЁЯУ▒ рдореЗрд░реЗ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░",
        'purchase_plan': "ЁЯТ░ рдпреЛрдЬрдирд╛ рдЦрд░реАрджреЗрдВ",
        'downloads': "тмЗя╕П рдбрд╛рдЙрдирд▓реЛрдб",
        'support': "ЁЯУЮ рд╕рд╣рд╛рдпрддрд╛",
        'no_configs': "рдЖрдкрдХреЗ рдкрд╛рд╕ рдХреЛрдИ рд╕рдХреНрд░рд┐рдп рдХреЙрдиреНрдлрд╝рд┐рдЧрд░ рдирд╣реАрдВ рд╣реИред рдЦрд░реАрджрдиреЗ рдХреЗ рд▓рд┐рдП рдпреЛрдЬрдирд╛ рдЦрд░реАрджреЗрдВ рдмрдЯрди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ!",
        'select_plan': "рдХреГрдкрдпрд╛ рдПрдХ рдпреЛрдЬрдирд╛ рдЪреБрдиреЗрдВ:",
        'download_apps': "рд╡рд┐рднрд┐рдиреНрди рдкреНрд▓реЗрдЯрдлрд╝реЙрд░реНрдо рдХреЗ рд▓рд┐рдП рд╣рдорд╛рд░реА рдРрдкреНрд╕ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ:",
        'support_message': "рдпрджрд┐ рдЖрдкрдХреЛ рд╕рд╣рд╛рдпрддрд╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИ, рддреЛ рдХреГрдкрдпрд╛ рдЕрдкрдиреА рд╕рдорд╕реНрдпрд╛ рдмрддрд╛рдПрдВ рдФрд░ рд╣рдо рдЬрд▓реНрдж рд╕я┐╜я┐╜ рдЬрд▓реНрдж рдЬрд╡рд╛рдм рджреЗрдВрдЧреЗред"
    },
    'ar': {
        'welcome': "┘Е╪▒╪н╪и╪з┘Л ╪и┘Г ┘Б┘К ╪о╪п┘Е╪й VPN! ЁЯМР\n\n┘З┘Ж╪з ┘К┘Е┘Г┘Ж┘Г:\nЁЯУ▒ ╪╣╪▒╪╢ ╪з┘Д╪е╪╣╪п╪з╪п╪з╪к\nЁЯТ░ ╪┤╪▒╪з╪б ╪и╪з┘В╪з╪к ╪м╪п┘К╪п╪й\nтмЗя╕П ╪к╪н┘Е┘К┘Д ╪к╪╖╪и┘К┘В╪з╪к┘Ж╪з\nЁЯУЮ ╪з┘Д╪п╪╣┘Е ╪з┘Д┘Б┘Ж┘К\n\n┘К╪▒╪м┘Й ╪з╪│╪к╪о╪п╪з┘Е ╪з┘Д┘В╪з╪ж┘Е╪й ╪г╪п┘Ж╪з┘З ┘Д┘Д╪и╪п╪б!",
        'select_language': "╪з┘Д╪▒╪м╪з╪б ╪з╪о╪к┘К╪з╪▒ ┘Д╪║╪к┘Г:",
        'language_selected': "╪к┘Е ╪к╪║┘К┘К╪▒ ╪з┘Д┘Д╪║╪й ╪е┘Д┘Й ╪з┘Д╪╣╪▒╪и┘К╪й!",
        'my_configs': "ЁЯУ▒ ╪е╪╣╪п╪з╪п╪з╪к┘К",
        'purchase_plan': "ЁЯТ░ ╪┤╪▒╪з╪б ╪и╪з┘В╪й",
        'downloads': "тмЗя╕П ╪з┘Д╪к╪н┘Е┘К┘Д╪з╪к",
        'support': "ЁЯУЮ ╪з┘Д╪п╪╣┘Е",
        'no_configs': "┘Д┘К╪│ ┘Д╪п┘К┘Г ╪г┘К ╪е╪╣╪п╪з╪п╪з╪к ┘Ж╪┤╪╖╪й. ╪з╪│╪к╪о╪п┘Е ╪▓╪▒ ╪┤╪▒╪з╪б ╪и╪з┘В╪й ┘Д┘Д╪┤╪▒╪з╪б!",
        'select_plan': "╪з┘Д╪▒╪м╪з╪б ╪з╪о╪к┘К╪з╪▒ ╪и╪з┘В╪й:",
        'download_apps': "╪н┘Е┘Д ╪к╪╖╪и┘К┘В╪з╪к┘Ж╪з ┘Д┘Е╪о╪к┘Д┘Б ╪з┘Д┘Е┘Ж╪╡╪з╪к:",
        'support_message': "╪е╪░╪з ┘Г┘Ж╪к ╪и╪н╪з╪м╪й ╪е┘Д┘Й ┘Е╪│╪з╪╣╪п╪й╪М ┘К╪▒╪м┘Й ┘И╪╡┘Б ┘Е╪┤┘Г┘Д╪к┘Г ┘И╪│┘Ж╪▒╪п ┘Б┘К ╪г┘В╪▒╪и ┘И┘В╪к ┘Е┘Е┘Г┘Ж."
    },
    'ru': {
        'welcome': "╨Ф╨╛╨▒╤А╨╛ ╨┐╨╛╨╢╨░╨╗╨╛╨▓╨░╤В╤М ╨▓ ╨╜╨░╤И VPN ╤Б╨╡╤А╨▓╨╕╤Б! ЁЯМР\n\n╨Ч╨┤╨╡╤Б╤М ╨▓╤Л ╨╝╨╛╨╢╨╡╤В╨╡:\nЁЯУ▒ ╨Я╤А╨╛╤Б╨╝╨╛╤В╤А╨╡╤В╤М ╨▓╨░╤И╨╕ ╨║╨╛╨╜╤Д╨╕╨│╤Г╤А╨░╤Ж╨╕╨╕\nЁЯТ░ ╨Ъ╤Г╨┐╨╕╤В╤М ╨╜╨╛╨▓я┐╜я┐╜╨╡ ╨┐╨╗╨░╨╜╤Л\nтмЗя╕П ╨б╨║╨░╤З╨░╤В╤М ╨╜╨░╤И╨╕ ╨┐╤А╨╕╨╗╨╛╨╢╨╡╨╜╨╕╤П\nЁЯУЮ ╨Я╨╛╨╗╤Г╤З╨╕╤В╤М ╨┐╨╛╨┤╨┤╨╡╤А╨╢╨║╤Г\n\n╨Ш╤Б╨┐╨╛╨╗╤М╨╖╤Г╨╣╤В╨╡ ╨╝╨╡╨╜╤О ╨╜╨╕╨╢╨╡, ╤З╤В╨╛╨▒╤Л ╨╜╨░╤З╨░╤В╤М!",
        'select_language': "╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╨▓╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨▓╨░╤И ╤П╨╖╤Л╨║:",
        'language_selected': "╨п╨╖╤Л╨║ ╨╕╨╖╨╝╨╡╨╜╨╡╨╜ ╨╜╨░ ╤А╤Г╤Б╤Б╨║╨╕╨╣!",
        'my_configs': "ЁЯУ▒ ╨Ь╨╛╨╕ ╨║╨╛╨╜╤Д╨╕╨│╤Г╤А╨░╤Ж╨╕╨╕",
        'purchase_plan': "ЁЯТ░ ╨Ъ╤Г╨┐╨╕╤В╤М ╨┐╨╗╨░╨╜",
        'downloads': "тмЗя╕П ╨Ч╨░╨│╤А╤Г╨╖╨║╨╕",
        'support': "ЁЯУЮ ╨Я╨╛╨┤╨┤╨╡╤А╨╢╨║╨░",
        'no_configs': "╨г ╨▓╨░╤Б ╨╜╨╡╤В ╨░╨║╤В╨╕╨▓╨╜╤Л╤Е ╨║╨╛╨╜╤Д╨╕╨│╤Г╤А╨░╤Ж╨╕╨╣. ╨Ш╤Б╨┐╨╛╨╗╤М╨╖╤Г╨╣╤В╨╡ ╨║╨╜╨╛╨┐╨║╤Г ╨Ъ╤Г╨┐╨╕╤В╤М ╨┐╨╗╨░╨╜, ╤З╤В╨╛╨▒╤Л ╨┐╤А╨╕╨╛╨▒╤А╨╡╤Б╤В╨╕!",
        'select_plan': "╨Я╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░, ╨▓╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┐╨╗╨░╨╜:",
        'download_apps': "╨б╨║╨░╤З╨░╨╣╤В╨╡ ╨╜╨░╤И╨╕ ╨┐╤А╨╕╨╗╨╛╨╢╨╡╨╜╨╕╤П ╨┤╨╗╤П ╤А╨░╨╖╨╜╤Л╤Е ╨┐╨╗╨░╤В╤Д╨╛╤А╨╝:",
        'support_message': "╨Х╤Б╨╗╨╕ ╨▓╨░╨╝ ╨╜╤Г╨╢╨╜╨░ ╨┐╨╛╨╝╨╛╤Й╤М, ╨╛╨┐╨╕╤И╨╕╤В╨╡ ╨▓╨░╤И╤Г ╨┐╤А╨╛╨▒╨╗╨╡╨╝╤Г, ╨╕ ╨╝╤Л ╨╛╤В╨▓╨╡╤В╨╕╨╝ ╨║╨░╨║ ╨╝╨╛╨╢╨╜╨╛ ╤Б╨║╨╛╤А╨╡╨╡."
    }
}

def create_language_markup():
    """Create keyboard markup for language selection"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = [types.KeyboardButton(emoji_name) for emoji_name in LANGUAGE_EMOJIS.values()]
    markup.add(*buttons)
    return markup

def get_language_code(selected_language):
    """Get language code from selected language button text"""
    for code, emoji_name in LANGUAGE_EMOJIS.items():
        if emoji_name == selected_language:
            return code
    return 'en'  # Default to English if not found

def get_text(lang_code, key):
    """Get translated text for a given key and language"""
    try:
        return TRANSLATIONS[lang_code][key]
    except KeyError:
        # Fallback to English if translation not found
        return TRANSLATIONS['en'][key]

# User language preferences storage
USER_LANGUAGES_FILE = 'user_languages.json'

def load_user_languages():
    """Load user language preferences from file"""
    if os.path.exists(USER_LANGUAGES_FILE):
        try:
            with open(USER_LANGUAGES_FILE, 'r') as f:
                return json.load(f)
        except:
            return {}
    return {}

def save_user_languages(user_languages):
    """Save user language preferences to file"""
    with open(USER_LANGUAGES_FILE, 'w') as f:
        json.dump(user_languages, f)

def get_user_language(user_id):
    """Get language preference for a user"""
    user_languages = load_user_languages()
    return user_languages.get(str(user_id), 'en')

def set_user_language(user_id, lang_code):
    """Set language preference for a user"""
    user_languages = load_user_languages()
    user_languages[str(user_id)] = lang_code
    save_user_languages(user_languages)

def create_client_markup(lang_code):
    """Create client menu markup with translated buttons"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(
        get_text(lang_code, 'my_configs'),
        get_text(lang_code, 'purchase_plan')
    )
    markup.row(
        get_text(lang_code, 'downloads'),
        get_text(lang_code, 'support')
    )
    return markup 
